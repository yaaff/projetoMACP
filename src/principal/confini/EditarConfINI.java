/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditarConfINI.java
 *
 * Created on 14/09/2011, 04:20:13
 */
package principal.confini;

import com.sun.jna.Platform;
import java.awt.Color;
import java.awt.FileDialog;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import principal.MACP;
import principal.UI;

/**
 *
 * @author Gabriela2
 */
public class EditarConfINI extends javax.swing.JDialog {

    /** Creates new form EditarConfINI */
    public EditarConfINI(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        try {
            String strGppPath = CarregarGppPath();
            if(strGppPath == null)
                caminhoCompilador = null;
            else            
                caminhoCompilador = new File(strGppPath);
            
            caminhoCompiladorTEMP = caminhoCompilador;
            //new File(CarregarIncludes());
        } catch (FileNotFoundException ex) {
            //Não retorna erro nenhum, pois se arquivo nao existir sera criado
            //Logger.getLogger(EditarConfINI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            //Logger.getLogger(EditarConfINI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /*
     * Carrega informações deo arquivo conf.ini
     * @author Daniel Lima Gomes Jr,2012
     */
    private String CarregarGppPath() throws FileNotFoundException, IOException{
        String strReturn=new String();
            File confFile = new File(System.getProperty("user.dir"),"conf.ini");
            FileInputStream fileInputStream = new FileInputStream(confFile);
            DataInputStream dataInputStream = new DataInputStream(fileInputStream);
            if(dataInputStream.available() > 0)
            {
                strReturn = dataInputStream.readLine();
                jTextFieldPathCompilador.setText(strReturn);
                jTextFieldIncludes.setText(dataInputStream.readLine());
            }
            dataInputStream.close();

            //System.out.println(strReturn);
            
        if(strReturn.equalsIgnoreCase(""))           
            return null;
        else
            return strReturn;
    }

    private String CarregarIncludes(){
        return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOK = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldPathCompilador = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonNavegarArquivos = new javax.swing.JButton();
        jButtonProcurarMinGW = new javax.swing.JButton();
        jTextFieldIncludes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonCarregarPadrao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar conf.ini");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jTextFieldPathCompilador.setToolTipText("Localização do arquivo g++.exe");

        jLabel1.setText("Compilador C++:");
        jLabel1.setToolTipText("Localização do arquivo g++.exe");

        jButtonNavegarArquivos.setText("...");
        jButtonNavegarArquivos.setToolTipText("Localizar g++.exe ...");
        jButtonNavegarArquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNavegarArquivosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldPathCompilador, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonNavegarArquivos, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPathCompilador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonNavegarArquivos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonProcurarMinGW.setText("Procurar compilador MinGW");
        jButtonProcurarMinGW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcurarMinGWActionPerformed(evt);
            }
        });
        jButtonProcurarMinGW.setVisible(Platform.isWindows());

        jTextFieldIncludes.setToolTipText("Comandos adicionais de compilação (Windows)");

        jLabel2.setText("Includes adicionais:");
        jLabel2.setToolTipText("Comandos adicionais de compilação (Windows)");

        jButtonCarregarPadrao.setText("Carregar Configuração Padrão");
        jButtonCarregarPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarPadraoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonProcurarMinGW)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCarregarPadrao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOK))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldIncludes, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIncludes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOK)
                    .addComponent(jButtonCarregarPadrao)
                    .addComponent(jButtonProcurarMinGW))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonProcurarMinGWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcurarMinGWActionPerformed
        if (Platform.isWindows()) {
            // para encontrar o mingw, primeiro procura pelo codeblocks
            // no diretorio de arquivos de programas
            File programFilesDir = new File(System.getenv("ProgramFiles"));
            File codeBlocksDir = procurarIDEDir(programFilesDir);
            File systemDrive = new File(System.getenv("SystemDrive"));
            if (codeBlocksDir == null) {
                // se o codeblocks nÃ£o foi encontrado na pasta de arquivos
                // de programas, procura na raiz do sistema, geramente C:
                codeBlocksDir = procurarIDEDir(systemDrive);
            }
            File minGWDir = null;
            if (codeBlocksDir != null) {
                // se existe um diretÃ³rio chamado codeblocks, deve existe um mingw
                // lÃ¡ dentro
                minGWDir = procuraMinGWDir(codeBlocksDir);
            }
            if (minGWDir == null) {
                minGWDir = procuraMinGWDir(systemDrive);
            }
            File gppFile = null;
            if (minGWDir != null) {
                File mingwBinDir = new File(minGWDir, "bin");
                if (mingwBinDir.exists()) {
                    for (File f : mingwBinDir.listFiles()) {
                        if (f.isFile()) {
                            if (f.getName().toLowerCase().equalsIgnoreCase("g++.exe")) {
                                gppFile = f;
                            }
                        }
                    }
                }
            }
            if (gppFile == null) {
                JOptionPane.showMessageDialog(
                        this,
                        "O MinGW nao foi encontrado em seu sistema!",
                        MACP.version,
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                caminhoCompiladorTEMP = gppFile;
                jTextFieldPathCompilador.setText(gppFile.getAbsolutePath());
                // efeito de mudanÃ§a de cores
                jTextFieldPathCompilador.setForeground(Color.RED);
                jButtonProcurarMinGW.setEnabled(false);
                class VoltarCor extends TimerTask {

                    @Override
                    public void run() {
                        jTextFieldPathCompilador.setForeground(Color.BLACK);
                        jButtonProcurarMinGW.setEnabled(true);
                    }
                }
                new Timer().schedule(new VoltarCor(), 2000);
            }
        }
    }//GEN-LAST:event_jButtonProcurarMinGWActionPerformed

    private void jButtonNavegarArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNavegarArquivosActionPerformed
        JFileChooser chooser = new JFileChooser();
        if (caminhoCompilador == null)
            chooser.setCurrentDirectory(new File(System.getenv("programfiles")));
        else
            chooser.setCurrentDirectory(caminhoCompilador);

        chooser.setMultiSelectionEnabled(false);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int acao = chooser.showOpenDialog(this);
        if (acao == JFileChooser.APPROVE_OPTION) {
            caminhoCompiladorTEMP = chooser.getSelectedFile();
            jTextFieldPathCompilador.setText(caminhoCompiladorTEMP.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonNavegarArquivosActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        caminhoCompilador = caminhoCompiladorTEMP;
        File confFile = new File(System.getProperty("user.dir"), "conf.ini");
        
        try {
            FileOutputStream fileOutputStream = new FileOutputStream(confFile);
            DataOutputStream dataOutputStream = new DataOutputStream(fileOutputStream);
            dataOutputStream.writeBytes(jTextFieldPathCompilador.getText()+"\r\n"+jTextFieldIncludes.getText());
            dataOutputStream.flush();
            dataOutputStream.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Erro ao salvar arquivo conf.ini\n",
                    MACP.version,
                    JOptionPane.ERROR_MESSAGE);
        }
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
    }//GEN-LAST:event_formComponentHidden

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void jButtonCarregarPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarPadraoActionPerformed
        if(UI.radioWindows.isSelected())
        {
            jTextFieldPathCompilador.setText("C:\\MACP\\MinGW\\bin\\g++.exe");
            jTextFieldIncludes.setText("-I C:\\MACP\\MinGW\\lib\\gcc\\mingw32\\4.6.1\\include -I \"C:\\MACP\\MinGW\\lib\\gcc\\mingw32\\4.6.1\\include\\c++\\backward\" -I C:\\MACP\\MinGW\\include -I C:\\MACP\\MinGW\\lib\\gcc\\mingw32\\4.6.1\\include -I \"C:\\MACP\\MinGW\\lib\\gcc\\mingw32\\4.6.1\\include\\c++\\mingw32\" -I \"C:\\MACP\\MinGW\\lib\\gcc\\mingw32\\4.6.1\" -I C:\\MACP\\MinGW\\include -I C:\\MACP\\MinGW\\lib\\gcc\\mingw32\\4.6.1\\include -L C:\\MACP\\MinGW\\lib");
        }
        else
        {
            jTextFieldPathCompilador.setText("g++");
            jTextFieldIncludes.setText("");
        }
    }//GEN-LAST:event_jButtonCarregarPadraoActionPerformed

    private File procuraMinGWDir(File parent) {
        if (parent.isDirectory()) {
            for (File f : parent.listFiles()) {
                if (f.isDirectory()) {
                    if (f.getName().toLowerCase().contains("mingw")) {
                        return f;
                    }
                }
            }
        }
        return null;
    }

    private File procurarIDEDir(File parent) {
        if (parent.isDirectory()) {
            for (File f : parent.listFiles()) {
                if (f.isDirectory()) {
                    if ("MinGW".equalsIgnoreCase(f.getName())) {
                        return f;
                    }
                }
            }
        }
        if (parent.isDirectory()) {
            for (File f : parent.listFiles()) {
                if (f.isDirectory()) {
                    if ("CodeBlocks".equalsIgnoreCase(f.getName())) {
                        return f;
                    }
                }
            }
        }
        if (parent.isDirectory()) {
            for (File f : parent.listFiles()) {
                if (f.isDirectory()) {
                    if ("Dev-Cpp".equalsIgnoreCase(f.getName())) {
                        return f;
                    }
                }
            }
        }
        return null;
    }

    public File getCaminhoCompilador() {
        return caminhoCompiladorTEMP;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                EditarConfINI dialog = new EditarConfINI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCarregarPadrao;
    private javax.swing.JButton jButtonNavegarArquivos;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonProcurarMinGW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldIncludes;
    private javax.swing.JTextField jTextFieldPathCompilador;
    // End of variables declaration//GEN-END:variables
    private File caminhoCompiladorTEMP;
    private File caminhoCompilador;
}
